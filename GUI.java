/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package detecciondeerrorestelecomunicaciones;



import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Arrays;

/**
 *
 * @author gurren-lagann
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    private String cadAlterada;
    private String cadOriginal;
    private char[][] arregloG;
    
    public GUI() {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private DefaultTableModel modelo;
    
    public String convertirBinario(String cad){
        String r = "";
        char[] messChar = cad.toCharArray();
        for (int i = 0; i < messChar.length; i++) {
            r += Integer.toBinaryString(messChar[i]) + " ";
        }
        return r;
    }
    
    public int getNumeroUnos(String r){
        int n = 0;
        char[] a = r.toCharArray();
        for (int i = 0; i < a.length; i++) {
            if(a[i]=='1'){
                n++;
            }
        }
        return n;
    }
    
    private String removerUltimo(String str) {
        return str.substring(0, str.length() - 1);
    }
    
    public String getBin(String p){
        String r = "";
        char[] messChar = p.toCharArray();
        for (int i = 0; i < messChar.length; i++) {
            r += Integer.toBinaryString(messChar[i]);
        }
        return r;
    }
    
    public String convertirLRC(String cad){
        String r = "";
        char[] messChar = cad.toCharArray();
        
        for (int i = 0; i < messChar.length; i++) {
            String s = Integer.toBinaryString(messChar[i]);
            r += Integer.toBinaryString(messChar[i]) + bitPariedad(s) + " ";
        }
        return r;
    }
    
    
    public String bitPariedad(String bin){
        char[] array = bin.toCharArray();
        int n=0;
        for(int i=0;i<bin.length();i++){
            if(array[i]=='1'){
                n++;
            }
        }
        if(n%2==0){
            return ""+0;
        }
        return ""+1;
    }
    
    public String getTextBin(String info){
         int charCode = Integer.parseInt(info, 2);
         String str = new Character((char)charCode).toString();
         return str;
    }
    
    public boolean esPar(String bin){
        char[] array = bin.toCharArray();
            int n=0;
            for(int i=0;i<bin.length();i++){
                if(array[i]=='1'){
                    n++;
                }
            }
            return n%2==0;
    }
    
    public String bitPariedad(char[] array){
      
        int n=0;
        for(int i=0;i<array.length;i++){
            if(array[i]=='1'){
                n++;
            }
        }
        if(n%2==0){
            return ""+0;
        }
        return ""+1;
    }
    
    public static byte calculateLRC(byte[] bytes) {
      byte LRC = 0;
        for (int i = 0; i < bytes.length; i++){
            LRC ^= bytes[i];
        }
            return LRC;
	}
   
    
    public final void iniciar(){
        modelo = new DefaultTableModel();
        table.setModel(modelo);
        modelo.addColumn("LETRAS");
        modelo.addColumn("BITS");
        modelo.addColumn("BIT PARIEDAD");
    }
    
    public void restartApplication(){ 
        iniciar();
        cadTxt.setText("");
        cadBits.setText("");
        cadTxt2.setText("");
        cadBits2.setText("");
        lrcTxt.setText("");
        status.setText("");
        status.setText("");
        unos.setText("");
        bitpar.setText("");
        cadBitsR.setText("");
        unos.setText("");
        unos2.setText("");
        unos3.setText("");
        msj.setText("");
    }
    
    public boolean aceptado(String cad, String cad2){
        return cad.equals(cad2);
    }
    
    public boolean aceptarCadena(String cad){
        char[] array = cad.toCharArray();
        int n=0;
        for(int i=0;i<cad.length();i++){
            if(array[i]=='1'){
                n++;
            }
        }
        return n%2==0;
       
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cadTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cadBits = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cadTxt2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cadBits2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        lrcTxt = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        bitpar = new javax.swing.JLabel();
        unos = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cadBitsR = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        msj = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        unos2 = new javax.swing.JLabel();
        unos3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1290, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Deteccion de errores LRC");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 500, 26));

        cadTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadTxtActionPerformed(evt);
            }
        });
        cadTxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cadTxtPropertyChange(evt);
            }
        });
        cadTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cadTxtKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cadTxtKeyTyped(evt);
            }
        });
        getContentPane().add(cadTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 709, 24));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Ingrese la cadena:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 320, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Cadena de bits: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 297, -1));

        cadBits.setText("                                                                              ");
        getContentPane().add(cadBits, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 350, 20));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Alterar la cadena:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, 307, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("LRC:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 432, 1, -1));

        jButton1.setText("ENVIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 630, 110, 40));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("MENSAJE:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 790, 99, -1));

        cadTxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadTxt2ActionPerformed(evt);
            }
        });
        cadTxt2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cadTxt2PropertyChange(evt);
            }
        });
        cadTxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cadTxt2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cadTxt2KeyTyped(evt);
            }
        });
        getContentPane().add(cadTxt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 480, 490, 30));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Cadena de bits a enviar: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, 315, -1));

        cadBits2.setText("                                                                              ");
        getContentPane().add(cadBits2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 530, 430, 30));

        table.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 1017, 130));

        jButton2.setText("NUEVO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 24, 120, -1));

        lrcTxt.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lrcTxt.setText("                                                                                                ");
        getContentPane().add(lrcTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 390, 320, 60));

        status.setText("                                                                                                    ");
        getContentPane().add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 680, 405, 30));

        bitpar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        bitpar.setText("               ");
        getContentPane().add(bitpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 390, 80, 50));

        unos.setText("                                                                                                                       ");
        getContentPane().add(unos, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 750, 490, 30));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("LRC:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 70, 30));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("ESTADO: ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 690, 99, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Contador:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 750, 315, 30));

        cadBitsR.setText("                                                                              ");
        getContentPane().add(cadBitsR, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 710, 430, 30));

        jButton3.setText("CONFIRMAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 480, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("Cadena de bits recibida: ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 720, 315, -1));

        msj.setText("                                                                                                                       ");
        getContentPane().add(msj, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 790, 490, 30));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setText("Contador:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 580, 315, 30));

        unos2.setText("                                                                                                                       ");
        getContentPane().add(unos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 580, 490, 30));

        unos3.setText("                                                                                                                       ");
        getContentPane().add(unos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 490, 30));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Contador:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 315, 30));

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
       if(cadBits2.getText().equals("") || cadBits2.getText().isBlank() || cadBits2.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Confirma el tren de bits tecleando ENTER dentro del cuadro."); 
       }else{
          if(esPar(cadBits2.getText())){
                status.setForeground(Color.BLACK);
                status.setText("Cadena aceptada, imprimiendo...");
                 String msjS="";
                    String[] cad = cadTxt2.getText().split(" ");
                    String r = "";
                int[] nU = new int[cad.length];    
                for (String cad1 : cad) {
                  msjS += getTextBin(removerUltimo(cad1));
                  r += removerUltimo(cad1) + " ";
                }
                for(int i=0;i<cad.length;i++){
                    nU[i] = getNumeroUnos(removerUltimo(cad[i]));
                }
                    msj.setText(msjS);
                    unos.setText(Arrays.toString(nU));
                    cadBitsR.setText(r);

            }else{
                status.setForeground(Color.red);
                status.setText("Cadena rechazada.");
                unos.setText("");
                cadBitsR.setText("");
                msj.setText("");

            }
       }
    }                                        

    private void cadTxtPropertyChange(java.beans.PropertyChangeEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void cadTxtActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        cadBits.setText(convertirBinario(cadTxt.getText()));
        cadOriginal = cadTxt.getText();
        cadOriginal = cadBits.getText();
        
        int longitud = cadTxt.getText().length();
        arregloG = new char[8][longitud];
        char[] pariedad = new char[longitud];
        Object[] fila = new Object[3];
        char[] cad = cadTxt.getText().toCharArray();
        for(char c: cadTxt.getText().toCharArray()){
            
            fila[0] = c;
            fila[1] = convertirBinario(Character.toString(c));
            fila[2] = bitPariedad(convertirBinario(Character.toString(c)));
            modelo.addRow(fila);        
        }
        
        //BIT PARIEDAD DE LA PARIEDAD
        for(int i=0;i<longitud;i++){
            pariedad[i] = bitPariedad(convertirBinario(Character.toString(cad[i]))).charAt(0);
        }
         
         //LRC  
         byte[] b = cadTxt.getText().getBytes();
         cadTxt2.setText(convertirLRC(cadTxt.getText()));

         //0xFF = 8 bits
     
         String s1 = String.format("%7s", Integer.toBinaryString( calculateLRC(b) & 0xFF)).replace(' ', '0');
         
         //contar unos
         String[] cad1 = cadBits.getText().split(" ");
         int[] nU1 = new int[cad1.length];    
         for(int i=0;i<cad1.length;i++){
                    nU1[i] = getNumeroUnos(cad1[i]);
                }
                    
         unos3.setText(Arrays.toString(nU1));
        
         lrcTxt.setText(s1);
         bitpar.setText(bitPariedad(pariedad));
        
        
    }                                      

    private void cadTxtKeyPressed(java.awt.event.KeyEvent evt) {                                  
        // TODO add your handling code here:
        //cadBits.setText(convertirBinario(cadTxt.getText().toString()));
    }                                 

    private void cadTxt2ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        cadBits2.setText(cadTxt2.getText());
    }                                       

    private void cadTxt2PropertyChange(java.beans.PropertyChangeEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void cadTxt2KeyPressed(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void cadTxtKeyTyped(java.awt.event.KeyEvent evt) {                                
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
	                if(!Character.isLetter(ch) && !Character.isWhitespace(ch) && !(ch==KeyEvent.VK_BACK_SPACE) &&  !(ch==KeyEvent.VK_DELETE) ){
                            evt.consume();
                            getToolkit().beep();
	                    JOptionPane.showMessageDialog(null, "Ingresa solo caracteres");
	                }
    }                               

    private void cadTxt2KeyTyped(java.awt.event.KeyEvent evt) {                                 
        // TODO add your handling code here:
        char c=evt.getKeyChar(); //get input from text field character by character
        if (!((c >= '0') && (c <= '1')) && !(c == KeyEvent.VK_BACK_SPACE) && !(c == KeyEvent.VK_DELETE) && !(c==KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresa solo digitos binarios");
        }
    }                                

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        

            // TODO add your handling code here:
            restartApplication();
      
        
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
                cadBits2.setText(cadTxt2.getText());
                //contar unos
                String[] cad2 = cadBits2.getText().split(" ");
                int[] nU1 = new int[cad2.length];    
                for(int i=0;i<cad2.length;i++){
                           nU1[i] = getNumeroUnos(cad2[i]);
                       }

                unos2.setText(Arrays.toString(nU1));     
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel bitpar;
    private javax.swing.JLabel cadBits;
    private javax.swing.JLabel cadBits2;
    private javax.swing.JLabel cadBitsR;
    private javax.swing.JTextField cadTxt;
    private javax.swing.JTextField cadTxt2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lrcTxt;
    private javax.swing.JLabel msj;
    private javax.swing.JLabel status;
    private javax.swing.JTable table;
    private javax.swing.JLabel unos;
    private javax.swing.JLabel unos2;
    private javax.swing.JLabel unos3;
    // End of variables declaration                   
}
